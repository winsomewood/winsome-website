# This is the NGINX config file that matches what is used on the server
# at /etc/nginx/conf.d/web.conf. This file is owned by root.
# This file is not currently uploaded on build, so remember to upload it manually

# Useful commands from https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-centos-8
# sudo nginx -t # test the config
# sudo systemctl restart nginx # restart process

# It seems like RHEL runs Apache httpd by default, stop it with sudo systemctl stop httpd

# server {
#     listen 80;
#     server_name winpub1 192.168.161.189;

#     location / {
#         return 301 http://winpub1.winsomewood.com$request_uri;
#     }
# }


# server {
#     listen 443 ssl;
#     server_name winpub1.winsomewood.com;

#     ssl_certificate /etc/pki/tls/certs/42d3f8c3a7a2c7d1.crt
#     ssl_certificate_key /etc/pki/tls/certs/42d3f8c3a7a2c7d1.pem

#     location / {
#         return 301 https://winpub1.winsomewood.com$request_uri;
#     }
# }

server {
    listen 80;
    server_name 192.168.161.189;
    # TODO add hostname here

    # This routes /api to Sinatra server, which serves all API endpoints
    # location /api {
    #     proxy_pass http://localhost:9292;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Route everything else to static files from the built client bundle
    # at /var/www/build
    # Wildcard match goes to index.html
    # location ^~ /public/ {
    #     root /var/www/public;

    #     # https://www.digitalocean.com/community/tutorials/how-to-improve-website-performance-using-gzip-and-nginx-on-ubuntu-20-04
    #     gzip on;
    #     gzip_vary on;
    #     gzip_proxied any;
    #     gzip_comp_level 6;
    #     gzip_buffers 16 8k;
    #     gzip_http_version 1.1;
    #     gzip_types
    #       application/javascript
    #       application/json
    #       application/manifest+json
    #       image/svg+xml
    #       text/css
    #       text/javascript
    #       text/plain
    #       text/xml;

    #     try_files $uri $uri/ =404;
    # }

    location / {
      proxy_pass http://192.168.161.189:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
}
